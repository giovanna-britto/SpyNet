generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  createdAt     DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  walletAddress String?    @unique @map("address") @db.VarChar(255)
  email         String     @unique @map("email") @db.VarChar(255)
  name          String     @map("name") @db.VarChar(255)
  id            Int        @id @default(autoincrement()) @map("id")
  enterprise    String     @map("enterprise") @db.VarChar(255)
  password      String     @map("password") @db.VarChar(255)
  role          String     @map("role") @db.VarChar(255)
  sector        String     @map("sector") @db.VarChar(255)
  telephone     String     @map("telephone") @db.VarChar(255)
  agents        Agent[]    @relation("UserToAgents")
  Contracts     Contract[] @relation("UserContracts")

  @@map("users")
}

model Agent {
  id           String     @id @default(uuid()) @map("id")
  name         String     @map("name") @db.VarChar(255)
  description  String?    @map("description")
  endpoint     String     @map("endpoint")
  pricePerCall Decimal    @map("price_per_call") @db.Decimal(38, 18)
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  creatorId    Int        @map("creator_id")
  imageUrl     String?    @map("imageUrl")
  specialty    String     @map("specialty")
  useCases     String     @map("useCases")
  creator      User       @relation("UserToAgents", fields: [creatorId], references: [id])
  Contracts    Contract[] @relation("ApiContracts")

  @@map("apis")
}

model Contract {
  id             String     @id @default(uuid()) @map("id")
  callsPurchased Int        @map("calls_purchased")
  callsRemaining Int        @map("calls_remaining")
  paymentTxHash  String     @map("payment_tx_hash") @db.VarChar(255)
  createdAt      DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  userId         Int        @map("user_id")
  agentId        String     @map("agent_id")
  Agent          Agent      @relation("ApiContracts", fields: [agentId], references: [id])
  User           User       @relation("UserContracts", fields: [userId], references: [id])
  UsageLogs      UsageLog[]
  apiKey         ApiKey?    @relation("ContractApiKey")

  @@map("contracts")
}

model UsageLog {
  id         String   @id @default(uuid()) @map("id")
  contractId String   @map("contract_id")
  timestamp  DateTime @default(now()) @map("timestamp") @db.Timestamptz(6)
  callsUsed  Int      @map("calls_used")
  usageHash  String   @map("usage_hash") @db.VarChar(255)
  Contract   Contract @relation(fields: [contractId], references: [id])

  @@map("usage_logs")
}

model ApiKey {
  id         String   @id @default(uuid())
  key        String   @unique @db.VarChar(255)
  contractId String   @unique
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  contract   Contract @relation("ContractApiKey", fields: [contractId], references: [id]) // <- Nomeado igual

  @@map("api_keys")
}